{"version":3,"sources":["Datastore.js","ApiGateway.js","components/MapView.js","components/SearchField.js","components/MapFilter.js","components/DataDisplay.js","components/RightMenu.js","components/ContextMenu.js","components/Menu.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["instance","this","_data","key","value","Object","freeze","ApiGateway","endpoint","request","axios","get","headers","res","data","objekter","console","log","metadata","returnert","neste","href","concat","MapView","props","state","zoom","contextMenu","handleClick","bind","Map","center","currentLocation","maxZoom","onclick","TileLayer","url","attribution","drawIssueMarkers","issues","spiderfyOnMaxZoom","disableClusteringAtZoom","filters","length","drawMapObjects","map","drawRoads","roads","issueMarkers","item","index","position","geometry","coordinates","icon","getIcon","Popup","properties","name","date","objects","parse","require","geoJSON","geometri","wkt","type","point","id","onClick","handleMarkerClick","latLngList","Array","from","coords","slice","Polyline","color","positions","Polygon","err","rainbow","findIndex","filter","markerHtmlStyles","Leaflet","divIcon","className","iconAnchor","labelAnchor","popupAnchor","html","event","handleMapClick","numOfSteps","step","r","g","b","h","i","f","q","toString","Component","SearchField","handleInputChange","query","target","setState","prevState","filteredData","element","navn","toLowerCase","includes","handleClickOutside","placeholder","onChange","handleSelect","handleFilterSelect","onClickOutside","MapFilter","handleRemoveFilter","DataDisplay","Marker","showMarkerInfo","egenskaper","egenskap","verdi","RightMenu","roadObjectTypes","newFilters","handleFilters","ContextMenu","left","details","x","top","y","style","Container","show","swiping","handleContextClick","closeDataDisplay","onMouseDown","onMouseMove","marker","origin","originalEvent","classList","contains","pageX","pageY","lat","latlng","lng","issueRegistration","undefined","App","nvdbEndpoint","menu","nvdb","getUserLocation","navigator","geolocation","getCurrentPosition","getRoadObjectTypes","handleRegistration","polygon","result","forEach","radius","verts","headings","low","Math","PI","push","points","heading","asin","sin","cos","latitude","longitude","promises","poly","getPolygonString","getCircle","a","apiCall","Promise","all","then","values","apply","apiCallSingle","post","response","status","Error","body","xhttp","XMLHttpRequest","onreadystatechange","readyState","responseText","open","setRequestHeader","send","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc056d12.chunk.js","sourcesContent":["/**\r\n * Globally accessible data\r\n * Not in use yet\r\n */ \r\nclass Datastore {\r\n    constructor(){\r\n      this._data = {};\r\n    }\r\n  \r\n    add(key, value){\r\n      this._data[key] = value;\r\n    }\r\n  \r\n    get(key){\r\n      if(key in this._data){\r\n        return this._data[key];\r\n      } else {\r\n        return [];\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  const instance = new Datastore();\r\n  Object.freeze(instance);\r\n  \r\n  export default instance;","import axios from 'axios';\r\nimport Datastore from './Datastore';\r\n\r\n/**\r\n * Responsible for sending out api calls and storing responses\r\n */\r\nexport default class ApiGateway {\r\n    constructor(endpoint){\r\n        this.endpoint = endpoint;\r\n    }\r\n\r\n    async apiCall(request){\r\n      let res = await axios.get(this.endpoint + request, {headers: {'Accept': 'application/vnd.vegvesen.nvdb-v3-rev1+json'}});\r\n  \r\n      let data = res.data.objekter;\r\n      console.log(res)\r\n  \r\n      while (res.data.metadata.returnert === 1000) {\r\n        res = await axios.get(res.data.metadata.neste.href, {headers: {'Accept': 'application/vnd.vegvesen.nvdb-v3-rev1+json'}});\r\n        data = data.concat(res.data.objekter);\r\n      }\r\n      return data;\r\n    }\r\n\r\n    async apiCallSingle(request){\r\n      let res = await axios.get(this.endpoint + request, {headers: {'Accept': 'application/vnd.vegvesen.nvdb-v3-rev1+json'}});\r\n  \r\n      let data = res.data;\r\n      console.log(res)\r\n      return data;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Map, TileLayer, Marker, Popup, Polyline, Polygon, GeoJSON } from 'react-leaflet';\r\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'react-leaflet-markercluster/dist/styles.min.css';\r\nimport Leaflet from 'leaflet';\r\n\r\n/**\r\n * props:\r\n * data: map, roads, issues, filters\r\n * currentLocation\r\n * onClick\r\n */\r\nclass MapView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      zoom: 15,\r\n      contextMenu: false,\r\n    }\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Map \r\n        center={this.props.currentLocation} \r\n        zoom={this.state.zoom} maxZoom={19}\r\n        onclick={this.handleClick}\r\n      >\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n          />\r\n\r\n          {this.drawIssueMarkers(this.props.issues)}\r\n\r\n          <MarkerClusterGroup spiderfyOnMaxZoom={false} disableClusteringAtZoom={18}>\r\n           {this.props.filters.length !== 0 && this.drawMapObjects(this.props.map)}\r\n           {this.drawRoads(this.props.roads)}\r\n          </MarkerClusterGroup>\r\n\r\n        </Map>\r\n    );\r\n  }\r\n\r\n  drawIssueMarkers(issueMarkers){\r\n    return (\r\n      issueMarkers.map((item,index) => {\r\n        return(\r\n          <Marker position={item.geometry.coordinates} key={index} icon={this.getIcon()} >\r\n            <Popup>{item.properties.name + ' ' + item.properties.date}</Popup>\r\n          </Marker>\r\n        )\r\n      })\r\n    );\r\n  }\r\n\r\n  drawMapObjects(objects){\r\n    var parse = require('wellknown')\r\n    return(\r\n      objects.map((item, index) => {\r\n        try{\r\n\r\n          const geoJSON = parse(item.geometri.wkt)\r\n          if(geoJSON.type === 'Point'){\r\n            const point = [geoJSON['coordinates'][0], geoJSON['coordinates'][1]]\r\n            return (\r\n              <Marker position={point} key={item.id} icon={this.getIcon(item.metadata.type.id)} onClick={() => {this.props.handleMarkerClick(item)}} >\r\n              </Marker>\r\n            );\r\n          } else if(geoJSON.type === 'LineString') {\r\n            let latLngList = Array.from(geoJSON.coordinates.map(coords => (coords.slice(0,2))));\r\n            return (\r\n              <Polyline color='red' positions= {latLngList} key={index}>\r\n              </Polyline>\r\n            );\r\n          } else if(geoJSON.type === 'Polygon') {\r\n            let latLngList = geoJSON.coordinates;\r\n            return (\r\n              <Polygon color='red' positions= {latLngList} key={index}>\r\n              </Polygon>\r\n            );\r\n          } else {\r\n            console.log('Invalid geoJSON: ' + geoJSON.type);\r\n            console.log(geoJSON);\r\n            return null;\r\n          }\r\n  \r\n        } catch(err) {\r\n            console.log(item);\r\n            console.log(err)\r\n            return null;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  drawRoads(objects){\r\n    var parse = require('wellknown')\r\n    return(\r\n      objects.map((item,index) => {\r\n        const geoJSON = parse(item.geometri.wkt)\r\n\r\n        let latLngList = Array.from(geoJSON.coordinates.map(coords => (coords.slice(0,2))));\r\n        return (\r\n          <Polyline color='red' positions= {latLngList} key={index}>\r\n              </Polyline>\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  getIcon(id){\r\n    let color;\r\n    \r\n    if(id){\r\n      color = this.rainbow(\r\n        this.props.filters.length, \r\n        this.props.filters.findIndex((filter) => (\r\n          filter.id === id\r\n        ))\r\n      );\r\n    } else {\r\n      color = this.rainbow(1,1);\r\n    }\r\n \r\n\r\n    const markerHtmlStyles = `\r\n    background-color: ${color};\r\n    width: 2rem;\r\n    height: 2rem;\r\n    display: block;\r\n    left: -1.5rem;\r\n    top: -1.5rem;\r\n    position: relative;\r\n    border-radius: 3rem 3rem 0;\r\n    transform: rotate(45deg);\r\n    border: 1px solid #FFFFFF`\r\n\r\n    const icon = Leaflet.divIcon({\r\n      className: \"my-custom-pin\",\r\n      iconAnchor: [0, 24],\r\n      labelAnchor: [-6, 0],\r\n      popupAnchor: [0, -36],\r\n      html: `<span style=\"${markerHtmlStyles}\" />`\r\n    })\r\n\r\n    return icon;\r\n  }\r\n\r\n  handleClick(event) {\r\n    this.props.handleMapClick(event)\r\n  }\r\n\r\n  rainbow(numOfSteps, step) {\r\n    // This function generates vibrant, \"evenly spaced\" colours (i.e. no clustering). This is ideal for creating easily distinguishable vibrant markers in Google Maps and other apps.\r\n    // Adam Cole, 2011-Sept-14\r\n    // HSV to RBG adapted from: http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n    var r, g, b;\r\n    var h = step / numOfSteps;\r\n    var i = ~~(h * 6);\r\n    var f = h * 6 - i;\r\n    var q = 1 - f;\r\n    switch(i % 6){\r\n        case 0: r = 1; g = f; b = 0; break;\r\n        case 1: r = q; g = 1; b = 0; break;\r\n        case 2: r = 0; g = 1; b = f; break;\r\n        case 3: r = 0; g = q; b = 1; break;\r\n        case 4: r = f; g = 0; b = 1; break;\r\n        case 5: r = 1; g = 0; b = q; break;\r\n    }\r\n    var c = \"#\" + (\"00\" + (~ ~(r * 255)).toString(16)).slice(-2) + (\"00\" + (~ ~(g * 255)).toString(16)).slice(-2) + (\"00\" + (~ ~(b * 255)).toString(16)).slice(-2);\r\n    return (c);\r\n}\r\n}\r\n\r\nexport default MapView;\r\n","import React, { Component } from 'react';\r\nimport onClickOutside from 'react-onclickoutside';\r\n\r\nclass SearchField extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            query: '',\r\n            filteredData: []\r\n        }\r\n        \r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"searchField\">\r\n            <form>\r\n              <input\r\n                className='searchField-input'\r\n                placeholder=\"Search for...\"\r\n                value={this.state.query}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </form>\r\n            <div className='searchfield-choices'>{this.state.filteredData.map(i => <p key={i.id} className=\"searchfield-choice\" onClick={() => {this.handleSelect(i)}}>{i.navn}</p>)}</div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n    handleInputChange = event => {\r\n        const query = event.target.value;\r\n    \r\n        this.setState(prevState => {\r\n          const filteredData = this.props.data.filter(element => {\r\n            return element.navn.toLowerCase().includes(query.toLowerCase());\r\n          });\r\n    \r\n          return {\r\n            query,\r\n            filteredData\r\n          };\r\n        });\r\n    };\r\n\r\n    handleClickOutside(event){\r\n      this.setState({query: '', filteredData: []});\r\n    }\r\n\r\n    handleSelect(i){\r\n      this.setState({query: '', filteredData: []});\r\n      this.props.handleFilterSelect(i);\r\n    }\r\n}\r\n\r\nexport default onClickOutside(SearchField);","import React, { Component } from 'react';\r\n\r\nclass MapFilter extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.props.filters.length > 0 ?\r\n            <div className='mapFilter'>\r\n                <div>Vegobjekter</div>\r\n                    {\r\n                    this.props.filters.map((item) => (\r\n                            <div className='mapFilter-entry' key={item.id}>\r\n                                <div className='mapFilter-entry-name'>{item.navn}</div>\r\n                                <button className='mapFilter-entry-button' onClick={() => {this.props.handleRemoveFilter(item)}}>X</button>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                <div>Filtrer..</div>                \r\n            </div>\r\n            :\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapFilter;","import React, { Component } from 'react';\r\nimport onClickOutside from 'react-onclickoutside';\r\n\r\nclass DataDisplay extends Component {\r\n\r\n    render(){\r\n        const Marker = this.props.showMarkerInfo\r\n        return(\r\n            Marker ?\r\n            <div className='dataDisplay'>\r\n                <p>{Marker.metadata.type.navn}</p>\r\n                <p>ID: {Marker.id}</p>\r\n                <p> </p>\r\n                {Marker.egenskaper.map((egenskap) => {\r\n                    if(egenskap.verdi){\r\n                        return <p key={egenskap.id}>{egenskap.navn}: {egenskap.verdi}</p>\r\n                    } else {\r\n                        return;\r\n                    }  \r\n                })}\r\n\r\n                <div>\r\n                    <button>Rediger</button>\r\n                    <button>Opprett Sak</button>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n    handleClickOutside(event){\r\n        this.props.handleClickOutside();\r\n    }\r\n\r\n}\r\n\r\nexport default onClickOutside(DataDisplay);","import React, { Component } from 'react';\r\nimport SearchField from './SearchField';\r\nimport MapFilter from './MapFilter';\r\nimport DataDisplay from './DataDisplay';\r\n\r\nclass RightMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            filters: [],\r\n        }\r\n\r\n        this.handleFilterSelect = this.handleFilterSelect.bind(this);\r\n        this.handleRemoveFilter = this.handleRemoveFilter.bind(this);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='rightMenu'>\r\n                <SearchField handleFilterSelect={this.handleFilterSelect} data={this.props.roadObjectTypes}/>\r\n                <MapFilter filters={this.state.filters} handleRemoveFilter={this.handleRemoveFilter}/>\r\n                {this.props.showMarkerInfo && \r\n                    <DataDisplay   \r\n                    showMarkerInfo={this.props.showMarkerInfo}\r\n                    handleClickOutside={this.props.handleClickOutside}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleFilterSelect(item){\r\n        const newFilters= this.state.filters.concat(item);\r\n        this.props.handleFilters(newFilters)\r\n        this.setState(() => {\r\n            return{filters: newFilters}\r\n        })\r\n        \r\n    }\r\n\r\n    handleRemoveFilter(item){\r\n        const newFilters = this.state.filters.filter(f => f !== item);\r\n        this.props.handleFilters(newFilters)\r\n        this.setState(() => {\r\n            return{filters: newFilters}\r\n        })\r\n    }\r\n}\r\n\r\nexport default RightMenu;","import React, { Component } from 'react';\r\n\r\nclass ContextMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render(){\r\n        let left = this.props.details.x + 'px';\r\n        let top = this.props.details.y + 'px';\r\n\r\n        return(\r\n            <div className='ContextMenu' style={{left,top}}>\r\n                <button onClick={this.props.handleClick}>Hendelse</button>\r\n                <button>Nytt objekt</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContextMenu;\r\n\r\n","import React, { Component } from 'react';\r\nimport RightMenu from './RightMenu';\r\n\r\n//Currently not in use\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='Menu'>\r\n                <RightMenu/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport MapView from './MapView';\r\nimport Menu from './Menu';\r\nimport ContextMenu from './ContextMenu'\r\nimport RightMenu from './RightMenu';\r\n\r\nclass Container extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        contextMenu: {show: false},\r\n    }\r\n\r\n    this.swiping = false;\r\n\r\n    this.handleMapClick = this.handleMapClick.bind(this);\r\n    this.handleContextClick = this.handleContextClick.bind(this);\r\n    this.handleMarkerClick = this.handleMarkerClick.bind(this);\r\n    this.closeDataDisplay = this.closeDataDisplay.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"Container\" \r\n        onMouseDown={() => {this.swiping = false}} \r\n        onMouseMove={() => {this.swiping = true}} \r\n      >\r\n\r\n        {this.state.contextMenu.show && <ContextMenu details={this.state.contextMenu} handleClick={this.handleContextClick}/>} \r\n\r\n        <RightMenu\r\n          roadObjectTypes={this.props.roadObjectTypes}\r\n          showMarkerInfo={this.state.showMarkerInfo}\r\n          handleFilters={this.props.handleFilters}\r\n          handleClickOutside={this.closeDataDisplay}\r\n        />\r\n\r\n        <MapView\r\n          currentLocation={this.props.currentLocation}\r\n          map= {this.props.map}\r\n          filters= {this.props.filters}\r\n          roads={this.props.roads}\r\n          issues={this.props.issues}\r\n          handleMapClick={this.handleMapClick}\r\n          handleMarkerClick={this.handleMarkerClick}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleMarkerClick(marker) {\r\n    this.setState({showMarkerInfo: marker})\r\n  }\r\n\r\n  handleMapClick(event){\r\n    const origin = event.originalEvent;\r\n    if(origin.target.classList.contains('leaflet-container') && !this.state.contextMenu.show && !this.swiping){\r\n        this.setState({contextMenu: {show: true, x: origin.pageX, y: origin.pageY,  lat: event.latlng.lat, lng: event.latlng.lng}})    \r\n    } else if(!origin.target.classList.contains('ContextMenu')) {\r\n        this.setState({contextMenu: {show: false}});\r\n    }\r\n  }\r\n\r\n  handleContextClick(){\r\n    \r\n    this.setState(prevState => (\r\n      {issueRegistration: true, contextMenu: {show: false, lat: prevState.contextMenu.lat, lng: prevState.contextMenu.lng}}\r\n    ));\r\n  }\r\n\r\n  closeDataDisplay(){\r\n      this.setState({showMarkerInfo: undefined})\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ApiGateway from './ApiGateway'\r\nimport Container from './components/Container'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      nvdbEndpoint: 'https://nvdbapiles-v3.utv.atlas.vegvesen.no/',\r\n      currentLocation: { lat: 60.0084857, lng:11.0648648 },\r\n      menu: 'mainMenu',\r\n      map: [],\r\n      filters: [],\r\n      roads: [],\r\n      issues: [],\r\n    }\r\n\r\n    this.nvdb = new ApiGateway(this.state.nvdbEndpoint)\r\n\r\n\r\n    //bind functions that need a reference to this instance\r\n    this.handleFilters = this.handleFilters.bind(this);\r\n    this.getUserLocation = this.getUserLocation.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition(this.getUserLocation)\r\n    this.getRoadObjectTypes()\r\n    //this.getIssues();\r\n    //this.altTestApiSkriv();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container \r\n        currentLocation={this.state.currentLocation}\r\n        map= {this.state.map}\r\n        filters= {this.state.filters}\r\n        roads={this.state.roads}\r\n        issues={this.state.issues}\r\n        roadObjectTypes={this.state.roadObjectTypes}\r\n        handleFilters={this.handleFilters}\r\n        handleRegistration={this.handleRegistration}\r\n      />\r\n    );\r\n  }\r\n\r\n  getPolygonString(polygon) {\r\n    let result = '';\r\n    polygon.forEach(point => {\r\n      result = result + point.lat + ' ' + point.lng + ',';\r\n    });\r\n    return result.slice(0, -1);\r\n  }\r\n\r\n  /**\r\n   * Returns a collection of lat,lng points that form a circle around center\r\n   */\r\n  getCircle(center, radius=5, verts=10){\r\n    let headings = [];\r\n    let low = 0;\r\n    let step = (2*Math.PI - low) / verts;\r\n\r\n    for (let index = 0; index < verts; index++) {\r\n      headings.push(low);\r\n      low += step;\r\n    }\r\n\r\n    radius = radius / 6371;\r\n    center = {lat: center.lat*(Math.PI/180), lng: center.lng*(Math.PI/180)}\r\n    let points = []\r\n\r\n    headings.forEach(heading => {\r\n      let lng;\r\n      let lat = Math.asin(Math.sin(center.lat)*Math.cos(radius)+Math.cos(center.lat)*Math.sin(radius)*Math.cos(heading));\r\n\r\n      if(Math.cos(lat) === 0){\r\n        lng = center.lng;\r\n      } else {\r\n        lng = ((center.lng-Math.asin(Math.sin(heading)*Math.sin(radius)/Math.cos(lat))+Math.PI)%(2*Math.PI))-Math.PI;\r\n      }\r\n      points.push({lat: lat*(180/Math.PI), lng: lng*(180/Math.PI)})\r\n    });\r\n\r\n    points.push(points[0]);\r\n    return points;\r\n  }\r\n\r\n  getUserLocation(position){\r\n    this.setState({currentLocation: {lat: position.coords.latitude, lng: position.coords.longitude}})\r\n  }\r\n\r\n\r\n  async handleFilters(filters) {\r\n    let promises = [];\r\n    this.setState({filters: filters})\r\n    const poly = this.getPolygonString(this.getCircle(this.state.currentLocation))\r\n\r\n    if(filters){\r\n      filters.forEach(async(element) => {\r\n        promises.push(this.nvdb.apiCall('vegobjekter/' + element.id + '?inkluder=alle&srid=4326&polygon=' + poly));\r\n      });\r\n      Promise.all(promises).then((values) => {\r\n        this.setState({map: [].concat.apply([], values)});\r\n      });\r\n    }\r\n  }\r\n\r\n  async getRoadObjectTypes(){\r\n    const data = await this.nvdb.apiCallSingle('vegobjekttyper')\r\n    this.setState({roadObjectTypes: data})\r\n  }\r\n  \r\n  async handleRegistration(issues){\r\n    const response = await axios.post('/api/registerIssue', issues);\r\n\r\n    if (response.status !== 200) throw Error(response);\r\n  }\r\n\r\n  async getIssues(){\r\n    const response = await axios.get('/api/getIssues');\r\n    this.setState({issues: response.data})\r\n  }\r\n\r\n  async testApiSkriv(){\r\n    const response = await axios.post('http://localhost:8010/ws/no/vegvesen/ikt/sikkerhet/aaa/autentiser', {headers: { 'Content-Type': 'application/json'}, body: {'username': 'bjosor', 'password': 'bjosor'}});\r\n    console.log(response)\r\n    \r\n  }\r\n\r\n  altTestApiSkriv(){\r\n    var xhttp = new XMLHttpRequest();\r\n    xhttp.onreadystatechange = function() {\r\n      if (this.readyState == 4 && this.status == 200) {\r\n        console.log(xhttp.responseText);\r\n      }\r\n    };\r\n    xhttp.open(\"POST\", 'http://localhost:8010/ws/no/vegvesen/ikt/sikkerhet/aaa/autentiser', true);\r\n    xhttp.setRequestHeader(\"Content-type\", 'application/json');\r\n    xhttp.send({'username': 'bjosor', 'password': 'bjosor'});\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}